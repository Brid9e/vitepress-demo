export default {
  "test": "<template lang='pug'>\n</template>\n<script lang='ts' setup>\n</script>\n<style lang='scss' scoped>\n</style>",
  "comp1": "<template>\n  <el-row class=\"mb-4\">\n    <el-button>Default</el-button>\n    <el-button type=\"primary\">Primary</el-button>\n    <el-button type=\"success\">Success</el-button>\n    <el-button type=\"info\">Info</el-button>\n    <el-button type=\"warning\">Warning</el-button>\n    <el-button type=\"danger\">Danger</el-button>\n  </el-row>\n\n  <el-row class=\"mb-4\">\n    <el-button plain>Plain</el-button>\n    <el-button type=\"primary\" plain>Primary</el-button>\n    <el-button type=\"success\" plain>Success</el-button>\n    <el-button type=\"info\" plain>Info</el-button>\n    <el-button type=\"warning\" plain>Warning</el-button>\n    <el-button type=\"danger\" plain>Danger</el-button>\n  </el-row>\n\n  <el-row class=\"mb-4\">\n    <el-button round>Round</el-button>\n    <el-button type=\"primary\" round>Primary</el-button>\n    <el-button type=\"success\" round>Success</el-button>\n    <el-button type=\"info\" round>Info</el-button>\n    <el-button type=\"warning\" round>Warning</el-button>\n    <el-button type=\"danger\" round>Danger</el-button>\n  </el-row>\n\n  <el-row>\n    <el-button :icon=\"Search\" circle />\n    <el-button type=\"primary\" :icon=\"Edit\" circle />\n    <el-button type=\"success\" :icon=\"Check\" circle />\n    <el-button type=\"info\" :icon=\"Message\" circle />\n    <el-button type=\"warning\" :icon=\"Star\" circle />\n    <el-button type=\"danger\" :icon=\"Delete\" circle />\n  </el-row>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  Check,\n  Delete,\n  Edit,\n  Message,\n  Search,\n  Star,\n} from '@element-plus/icons-vue'\n</script>",
  "comp2": "<template>\n  <div class=\"flex flex-wrap items-center gap-1 my-2 tag-group\">\n    <span class=\"m-1 tag-group__title line-height-2\">Dark</span>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" class=\"mx-1\" effect=\"dark\">\n      {{ item.label }}\n    </el-tag>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" :type=\"item.type\" class=\"mx-1\" effect=\"dark\" closable>\n      {{ item.label }}\n    </el-tag>\n  </div>\n  <div class=\"flex flex-wrap items-center gap-1 my-2 tag-group\">\n    <span class=\"m-1 tag-group__title\">Light</span>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" class=\"mx-1\" :type=\"item.type\" effect=\"light\">\n      {{ item.label }}\n    </el-tag>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" class=\"mx-1\" :type=\"item.type\" effect=\"light\" closable>\n      {{ item.label }}\n    </el-tag>\n  </div>\n  <div class=\"flex flex-wrap items-center gap-1 my-2 tag-group\">\n    <span class=\"m-1 tag-group__title\">Plain</span>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" class=\"mx-1\" :type=\"item.type\" effect=\"plain\">\n      {{ item.label }}\n    </el-tag>\n    <el-tag v-for=\"item in items\" :key=\"item.label\" class=\"mx-1\" :type=\"item.type\" effect=\"plain\" closable>\n      {{ item.label }}\n    </el-tag>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { ref } from 'vue'\n\nimport type { TagProps } from 'element-plus'\n\ntype Item = { type: TagProps['type']; label: string }\n\nconst items = ref<Array<Item>>([\n  { type: '', label: 'Tag 1' },\n  { type: 'success', label: 'Tag 2' },\n  { type: 'info', label: 'Tag 3' },\n  { type: 'danger', label: 'Tag 4' },\n  { type: 'warning', label: 'Tag 5' },\n])\n</script>",
  "index": "<template lang='pug'>\n.doc-preview \n  .comp-box\n    component(ref=\"compRef\" :is=\"compFile\")\n  p 描述: {{ description }}\n  p 源码:  \n    el-button(@click=\"show = !show\" link) 展开\n    pre.source(v-if=\"show\" v-highlightjs=\"compContentValue[compFile.toLowerCase()]\")\n      code(class=\"html\")\n</template>\n<script>\nimport compContent from '../configs/compContent'\nexport default {\n  props: {\n    compFile: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    // source: {\n    //   type: String,\n    //   default: ''\n    // }\n  },\n  data() {\n    return {\n      show: false\n    }\n  },\n  computed: {\n    compContentValue() {\n      return compContent\n    }\n  },\n  mounted() {\n    console.log(compContent)\n  }\n}\n</script>\n\n<style scoped>\n.comp-box {\n  width: 100%;\n  border: 1px solid var(--vp-c-divider);\n  border-radius: 4px;\n  padding: 1rem;\n}\n.doc-preview {\n  border: 1px solid var(--vp-c-divider);\n  padding: 1rem;\n  border-radius: 8px;\n\n  .source {\n    background-color: #2d2b57;\n    border-radius: 8px;\n    padding: 1rem;\n    color: #ffffffac;\n    font-size: 14px;\n  }\n}\n</style>"
};
